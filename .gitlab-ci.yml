stages:
- build
- publish
- mirror

docker_build_image_2.4:
  stage: build
  image: docker:latest
  services:
  - docker:dind
  script: |
    docker build --pull \
      --build-arg HTTP_PROXY=${HTTP_PROXY} \
      --build-arg HTTPS_PROXY=${HTTPS_PROXY} \
      --build-arg NO_PROXY=${NO_PROXY} \
      --build-arg http_proxy=${HTTP_PROXY} \
      --build-arg https_proxy=${HTTPS_PROXY} \
      --build-arg no_proxy=${NO_PROXY} \
      -t image \
      -f 2.4/Dockerfile \
      2.4
    docker save --output=image.tar.gz image
  tags:
  - docker
  artifacts:
    name: docker-image
    paths:
    - image.tar.gz

docker_build_image_vufind1:
  stage: build
  image: docker:latest
  services:
  - docker:dind
  script: |
    docker build --pull \
      --build-arg HTTP_PROXY=${HTTP_PROXY} \
      --build-arg HTTPS_PROXY=${HTTPS_PROXY} \
      --build-arg NO_PROXY=${NO_PROXY} \
      --build-arg http_proxy=${HTTP_PROXY} \
      --build-arg https_proxy=${HTTPS_PROXY} \
      --build-arg no_proxy=${NO_PROXY} \
      -t image \
      -f 2.4/vufind1/Dockerfile \
      2.4/vufind1
    docker save --output=image.tar.gz image
  artifacts:
    name: docker-image
    paths:
    - image.tar.gz
  tags:
  - docker
  only:
  - /^vufind1-/
  except:
  - branches

docker_publish_alpha_2.4:
  stage: publish
  image: docker:latest
  services:
  - docker:dind
  script: |
    test "${DOCKER_AUTH_CONFIG}" == "" && echo "docker-config does not exists, aborting!" && false
    mkdir -p ~/.docker && echo "$DOCKER_AUTH_CONFIG" >~/.docker/config.json
    docker load --input=image.tar.gz
    docker tag image ubleipzig/vufind-httpd:alpha-2.4-${CI_COMMIT_REF_NAME}
    docker push ubleipzig/vufind-httpd:alpha-2.4-${CI_COMMIT_REF_NAME}
  tags:
  - docker
  dependencies:
  - docker_build_image_2.4
  only:
  - /^[0-9]+-/

docker_publish_staging_2.4:
  stage: publish
  image: docker:latest
  services:
  - docker:dind
  script: |
    test "${DOCKER_AUTH_CONFIG}" == "" && echo "docker-config does not exists, aborting!" && false
    mkdir -p ~/.docker && echo "$DOCKER_AUTH_CONFIG" >~/.docker/config.json
    docker load --input=image.tar.gz
    docker tag image ubleipzig/vufind-httpd:staging
    docker push ubleipzig/vufind-httpd:staging
  tags:
  - docker
  dependencies:
  - docker_build_image_2.4
  only:
  - master

docker_publish_production_2.4:
  stage: publish
  image: docker:latest
  services:
  - docker:dind
  script: |
    test "${DOCKER_AUTH_CONFIG}" == "" && echo "docker-config does not exists, aborting!" && false
    mkdir -p ~/.docker && echo "$DOCKER_AUTH_CONFIG" >~/.docker/config.json
    suffix=`expr $CI_COMMIT_TAG ':' '2.4-\(.*\)'`

    docker load --input=image.tar.gz
    docker tag image ubleipzig/vufind-httpd:2.4
    docker push ubleipzig/vufind-httpd:2.4
    for tag in "latest" "2" "2.4-${suffix}"; do
      docker tag ubleipzig/vufind-httpd:2.4 ubleipzig/vufind-httpd:${tag}
      docker push ubleipzig/vufind-httpd:${tag}
    done
  tags:
  - docker
  dependencies:
  - docker_build_image_2.4
  only:
  - /^2.4-/
  except:
  - branches

docker_publish_production_vufind1:
  stage: publish
  image: docker:latest
  services:
  - docker:dind
  script: |
    test "${DOCKER_AUTH_CONFIG}" == "" && echo "docker-config does not exists, aborting!" && false
    mkdir -p ~/.docker && echo "$DOCKER_AUTH_CONFIG" >~/.docker/config.json
    suffix=`expr ${CI_COMMIT_TAG} ':' 'vufind1-2.4-\(.*\)'`
    docker load --input=image.tar.gz
    docker tag image ubleipzig/vufind-httpd:vufind1
    docker push ubleipzig/vufind-httpd:vufind1
    for tag in "2" "2.4" "2.4-${suffix}"; do
      docker tag ubleipzig/vufind-httpd:vufind1 ubleipzig/vufind-httpd:vufind1-${tag}
      docker push ubleipzig/vufind-httpd:vufind1-${tag}
    done
  dependencies:
  - docker_build_image_vufind1
  tags:
  - docker
  only:
  - /^vufind1-/
  except:
  - branches

github_mirror:
  stage: mirror
  image:
    name: alpine/git
    entrypoint: [ "/bin/sh", "-c" ]
  variables:
    GIT_STRATEGY: clone
    GIT_CHECKOUT: "false"
  script: |
    cd /tmp
    git clone --mirror ${CI_REPOSITORY_URL} project
    cd project
    git remote add github https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/ubleipzig/vufind-httpd.git
    git push --mirror github
  tags:
  - docker
